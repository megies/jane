# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2019-03-15 12:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


# Populates the station field for all attachments
# Supported station values are RLAS, ROMY and None
def determine_station(apps, schema_editor):
    print("")  # newline
    attachments = apps.get_model('documents', 'DocumentIndexAttachment')
    documents = apps.get_model('documents', 'Document')
    rlas = None
    romy = None
    bspf = None

    queryset = documents.objects.all()

    for document in queryset:
        if document.document_type.name == 'stationxml':
            if document.name == 'dataless.seed.BW_RLAS.xml':
                rlas = document
                print("Found RLAS")
            elif document.name == 'dataless.seed.BW_ROMY.xml':
                romy = document
                print("Found ROMY")
            elif document.name == 'BSPF.xml':
                bspf = document
                print("Found BSPF")
            else:
                raise ValueError("Found unknown station: {0}".format(document.name))

    # this check does not apply if setting up a jane from scratch when no
    # documents are in the database
    if len(queryset):
        if rlas is None:
            raise ValueError("Could not find index for RLAS")
        if romy is None:
            raise ValueError("Could not find index for ROMY")
        if bspf is None:
            raise ValueError("Could not find index for BSPF")

    print("Migrating attachments...")

    # Processing results contains info regarding the event itself and station information
    # for ALL stations that recorded it, so we cannot set a single station
    attachments.objects.filter(category='Processing Results').update(station=None)

    # More recently processed results explicitly contain the station name
    attachments.objects.filter(category__endswith='(RLAS)').update(station=rlas)
    attachments.objects.filter(category__endswith='(ROMY)').update(station=romy)
    attachments.objects.filter(category__endswith='(BSPF)').update(station=bspf)

    # Older processed results do not contain the station name
    # We assume they are all from RLAS
    attachments.objects.filter(category='Event Information').update(station=rlas)
    attachments.objects.filter(category='Waveform Comparison').update(station=rlas)
    attachments.objects.filter(category='Correlation/Backazimuth').update(station=rlas)
    attachments.objects.filter(category='P-Coda Comparison').update(station=rlas)

    # Check whether there are any attachments which are not updated
    # If this triggers this script should be updated to account for these attachments
    if attachments.objects.filter(station=None).exclude(category='Processing Results').count() > 0:
        raise ValueError("Not all attachments could be migrated")


class Migration(migrations.Migration):
    dependencies = [
        ('documents', '0002_auto_20161018_0646'),
    ]
    operations = [
        migrations.AddField(
            model_name='documentindexattachment',
            name='station',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='documents.Document'),
        ),
        migrations.RunPython(determine_station, reverse_code=migrations.RunPython.noop),
    ]
