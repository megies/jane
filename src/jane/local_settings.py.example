# -*- coding: utf-8 -*-
import sys

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'jane',
        'USER': 'jane',
        'PASSWORD': 'CHANGEME!',
        'HOST': '127.0.0.1',
        'PORT': 5432
    }
}


# Be sure to fill in a unique SECRET_KEY
# Use python to generate a unique SECRET_KEY.
# >>> from random import choice
# >>> "".join([choice("abcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*(-_=+)")
# ... for i in range(50)])
SECRET_KEY = 'CHANGEME!'


ADMINS = (
    ('Webmaster', 'webmaster@localhost'),
)
MANAGERS = ADMINS

EMAIL_HOST = 'localhost'
EMAIL_PORT = 25
SERVER_EMAIL = 'django@localhost'
DEFAULT_FROM_EMAIL = 'noreply@localhost'

AUTO_LOGOUT_MINUTES = 60

# see https://docs.djangoproject.com/en/dev/topics/cache/#setting-up-the-cache
CACHE = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
    }
}

# set GEOS_LIBRARY_PATH dynamically on Windows -> requires GDAL package
# import osgeo
# import os
# GEOS_LIBRARY_PATH = os.path.join(osgeo.__path__[0], 'geos_c.dll')

# python's ctypes seems to always try to load 'libgdal.so.1' (gdal 1.x) even if
# gdal 2.x is installed, so if the Jane fails to run because GDAL can not be
# imported it is a good idea to provide the location of the gdal library:
# dynamically, or..
#import sys
#import os
#GDAL_LIBRARY_PATH = os.path.join(sys.prefix, 'lib', 'libgdal.so')
# ..manually
#GDAL_LIBRARY_PATH = '/home/user/anaconda/envs/jane/lib/libgdal.so'


# Uncomment this block to only allow reasonably strong passwords for
# production installations. See
# https://docs.djangoproject.com/en/1.9/topics/auth/passwords/#password-validation
# for more details.
#
# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#         'OPTIONS': {
#             'min_length': 9,
#         }
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


###############################################################################
# Jane Config
###############################################################################

# Name of the instance used in parts of the web interface.
JANE_INSTANCE_NAME = "Jane"
# Color used in certain parts of the web interface. Useful to distinguish
# separate Jane installations.
JANE_ACCENT_COLOR = "#D9230F"
# Constants written to StationXML files created by Jane.
JANE_FDSN_STATIONXML_SENDER = "Jane"
JANE_FDSN_STATIONXML_SOURCE = "Jane"

# optionally set a custom logfile destination, overriding the default value from settings.py
#LOGFILE = '/home/sysop/logs/jane-rotational.log'

# Change the settings for the test database here!
# for pytest-django, this did not work for me:
# https://stackoverflow.com/a/25188424
if 'test' in sys.argv or "pytest" in sys.modules:
    DATABASES = {
        'default': {
            'ENGINE': 'django.contrib.gis.db.backends.postgis',
            'NAME': 'test_jane',
            'USER': 'test_jane',
            'PASSWORD': 'test_jane',
            'HOST': '127.0.0.1',
            'PORT': 5432,
            'TEST': {
                # Important! Otherwise the DB name will be `test_test_jane`
                # and we want control.
                'NAME': 'test_jane'
            }
        }
    }
